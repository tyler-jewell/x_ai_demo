// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_app/test/mocks/mock_database_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_app/src/core/data/local/database_service.dart' as _i2;
import 'package:flutter_app/src/core/data/repositories/data_repository.dart'
    as _i4;
import 'package:flutter_app/src/core/domain/models/item.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i2.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<Map<String, dynamic>>> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<void> insertItem(Map<String, dynamic>? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertItem,
          [item],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [DataRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataRepository extends _i1.Mock implements _i4.DataRepository {
  MockDataRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.Item>> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Item>>.value(<_i5.Item>[]),
      ) as _i3.Future<List<_i5.Item>>);

  @override
  _i3.Future<void> insertItem(_i5.Item? item) => (super.noSuchMethod(
        Invocation.method(
          #insertItem,
          [item],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
